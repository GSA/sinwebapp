from django.urls import path, include
from rest_framework import permissions
from drf_yasg.views import get_schema_view
from drf_yasg import openapi

from api import views_private, views_public
from api.viewsets import SinViewSet, SinParamViewSet, StatusViewSet
from core import settings

app_name = 'api'
VERSION_STRING = f'v{int(settings.VERSION)}'

schema_view = get_schema_view(
   openapi.Info(
      title="CCDA API",
      default_version=str(settings.VERSION),
      description="An API for searching Core Contract Automation data.",
      contact=openapi.Contact(email=settings.MAINTAINER),
   ),
   public=False,
   permission_classes=(permissions.AllowAny,),
)

urlpatterns= [
    # application endpoints
    path('user/', views_private.user_info),
    path('users/', views_private.user_info_filtered),
    path('sinUser/', views_private.sin_user_info),
    path('sin/', views_private.sin_info),
    path('sins/', views_private.sin_info_all),
    path('updateSin/', views_private.sin_info_update),
    path('status/', views_private.status_info),
    path('userStatuses/', views_private.user_status_info),
    path('statuses/', views_private.status_info_all),
    path('groups/', views_private.group_info_all),
    # public endpoints
    path(f'{VERSION_STRING}/sins', SinViewSet.as_view()),
    path(f'{VERSION_STRING}/status', StatusViewSet.as_view()),
    path(f'{VERSION_STRING}/search', SinParamViewSet.as_view()),
    # Swagger/OpenAPI endpoints
    path(f'{VERSION_STRING}/swagger.json', schema_view.without_ui(cache_timeout=0)),
    path(f'{VERSION_STRING}/swagger/', schema_view.with_ui('swagger', cache_timeout=0)),
    path(f'{VERSION_STRING}/redoc/', schema_view.with_ui('redoc', cache_timeout=0)),
]

# NOTE: These are manually implemented endpoints that have the same functionality as
# the endpoints generated by django-rest-framework (drf). If drf ever breaks on an update, 
# uncomment these lines to restore API functionality

# urlpatterns += [
    # path(f'{VERSION_STRING}/search', views_public.search),
    # path(f'{VERSION_STRING}/sins', views_public.sins),
    # path(f'{VERSION_STRING}/status', views_public.status)
# ]